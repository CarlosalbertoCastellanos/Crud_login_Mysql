name: Desplegar a Amazon Lightsail Container Service

on:
  release:
    types:
      - created

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Configurar AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Iniciar sesión en Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Construir imagen Docker
        run: |
          docker build -t smarthphoneccastellanos:latest .

      - name: Etiquetar imagen Docker
        run: |
          ECR_REGISTRY=$(aws sts get-caller-identity --query "Account" --output text).dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          ECR_REPOSITORY=smarthphoneccastellanos
          docker tag smarthphoneccastellanos:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "ECR_REGISTRY=$ECR_REGISTRY" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=$ECR_REPOSITORY" >> $GITHUB_ENV

      - name: Empujar imagen a ECR
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Desplegar en Amazon Lightsail Container Service
        run: |
          aws lightsail update-container-service --service-name container-service-1 \
            --public-endpoint '{"containerName":"smarthphoneccastellanos","containerPort":80,"healthCheck":{"path":"/","successCodes":"200"}}' \
            --containers '{
              "smarthphoneccastellanos": {
                "image": "'$ECR_REGISTRY/$ECR_REPOSITORY:latest'",
                "environment": {
                  "DB_HOST": "'"${{ secrets.DB_HOST }}"'",
                  "DB_USER": "'"${{ secrets.DB_USER }}"'",
                  "DB_PASSWORD": "'"${{ secrets.DB_PASSWORD }}"'",
                  "DB_NAME": "'"${{ secrets.DB_NAME }}"'",
                  "DB_PORT": "'"${{ secrets.DB_PORT }}"'"
                },
                "ports": {
                  "3000": "HTTP"
                }
              }
            }'
